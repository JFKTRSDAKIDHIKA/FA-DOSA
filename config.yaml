# Hardware configuration
hardware:
  # Memory system
  dram_bandwidth_gb_s: 100.0
  sram_bandwidth_gb_s: 1000.0
  mac_throughput_gops: 1000.0
  bytes_per_element: 4  # float32

  # Memory hierarchy
  num_memory_levels: 3  # 0: Registers, 1: Accumulator, 2: Scratchpad

# === NEW: Technology node configuration ===
technology:
  node_nm: 40
  source: "40nm process dynamic energy model"
  description: "Dynamic energy model based on 40nm process technology with hierarchical memory system"

# Cost model parameters
costs:
  # Fusion overhead cost (pJ)
  fusion_overhead_cost_pj: 0.5
  
  # Area costs
  area_coefficient_mm2_per_kb: 0.0001  # Area per unit of buffer size
  
  # Note: Old hardcoded energy parameters have been removed in favor of 
  # the new 40nm process dynamic energy model implemented in the code

# === NEW: Physics-aware loss function weights ===
# These weights control how much the optimizer cares about different physical costs
weights:
  # Performance and area weights
  latency_weight: 1.5              # Increased by 1.5x for stronger EDP focus
  area_weight: 0.0                 # Set to one to enable area cost
  
  # === ENERGY WEIGHTS: Now decomposed by physical cost ===
  # These separate weights allow fine-grained control over optimization priorities
  compute_energy_weight: 0.75      # MAC operations are relatively cheap (1.5x)
  sram_energy_weight: 3.0          # On-chip SRAM access has moderate cost (1.5x)
  dram_energy_weight: 30.0         # ðŸ”¥ CRITICAL: High weight punishes expensive DRAM access (1.5x)
  noc_energy_weight: 2.25          # Network-on-chip communication cost (1.5x)
  
  # Constraint violation penalties
  penalty_weight: 500.0            # Penalty for invalid tiling factors (< 1)

# === NEW: Calibration factors for model tuning ===
calibration:
  latency_fudge_factor: 1.2        # Accounts for pipeline stalls, cache misses
  dram_energy_factor: 1.1          # Calibrate against real DRAM measurements
  sram_energy_factor: 0.9          # Fine-tune SRAM energy model
  compute_energy_factor: 1.0       # MAC operation energy calibration
  noc_energy_factor: 1.15          # Network-on-Chip energy adjustment

# === NEW: NoC (Network-on-Chip) energy parameters ===
noc:
  noc_energy_per_byte_pj: 0.05     # Energy cost per byte moved on NoC

# === NEW: Fusion control overhead parameters ===
fusion:
  fusion_control_overhead_cycles: 50  # Control overhead for coordinating fused ops
  fusion_latency_penalty_cycles: 30   # Extra cycles added per fused group
  # Dynamic fusion overhead scaling factors
  tiling_complexity_weight: 0.5       # How much tiling complexity affects fusion overhead
  fusion_energy_base_scaling: 0.4     # Base scaling for energy overhead from tiling
  data_management_energy_per_layer: 0.1  # Energy per layer for managing fused data

# === NEW: Compute energy parameters ===
# Note: MAC energy is now calculated dynamically based on 40nm process model
# in the _get_dynamic_epa method (0.561 ÂµJ per MAC operation)
compute:
  # This section is kept for compatibility but values are now calculated dynamically
  mac_energy_pj: 0.1               # Legacy parameter (not used in new model)

# === NEW: Hardware Design Space Exploration parameters ===
hardware_dse:
  clock_frequency_mhz: 1000.0      # Clock frequency in MHz
  macs_per_pe_per_cycle: 1.0       # MAC operations per PE per clock cycle

# === NEW: Area model coefficients ===
area_model:
  area_per_pe_mm2: 0.01            # Area per processing element in mmÂ²
  area_per_kb_sram_mm2: 0.1        # Area per KB of SRAM in mmÂ²
  area_base_mm2: 1.0               # Base area for control logic in mmÂ²

# Problem dimensions
dimensions:
  loop_dims: ['R', 'S', 'P', 'Q', 'C', 'K', 'N']  # Loop dimensions from DOSA paper